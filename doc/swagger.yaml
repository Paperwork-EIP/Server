swagger: '2.0'
info:
  title: Paperwork - API Documentation
  description: Paperwork API documentation for Epitech Project.
  version: 1.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact: 
    name: Paperwork Team
    url: http://eip.epitech.eu/2024/prosshelper
    email: prosshelper_2024@labeip.epitech.eu
host: 'localhost:3000'
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: user
    description: User management.
  - name: oauth
    description: Oauth management.
  - name: process
    description: Process management.
  - name: step
    description: Step management.
  - name: userProcess
    description: UserProcess management.
  - name: calendar
    description: Calendar management.
  - name: processProposal
    description: ProcessProposal management.

paths:
  /user/register:
    post:
      parameters:
        - in: body
          name: email
          schema:
            type: string
          description: User email.
        - in: body
          name: username
          schema:
            type: string
          description: User username.
        - in: body
          name: password
          schema:
            type: string
          description: User password.
      responses:
        '200':
          description: User registered.
          schema:
            type: object
            example:
              {
                "message": "User registered !",
                "email": "test@test.com",
                "jwt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJlbWFpbCI6InRlc3RAdGVzdC5jb20ifSwiaWF0IjoxNjcyNzUyMDY2fQ.oAEpSW-SKnhAvmxMnLMVKuMevsRWqF9Y8ar15JNft6U"
              }
        '400':
          description: Pseudo, email or password missing.
        '409':
          description: Username or email already used.
        '500':
          description: System error.
      summary: Register a new user.
      tags:
        - user
  /user/login:
    post:
      parameters:
        - in: body
          name: email
          schema:
            type: string
          description: User email.
        - in: body
          name: password
          schema:
            type: string
          description: User password.
      responses:
        '200':
          description: User logged in.
        '404':
          description: User does not exist.
        '400':
          description: Email or password missing / invalid email or password.
        '500':
          description: System error.
      summary: Login a user.
      tags:
        - user
  /user/getbyemail:
    get:
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: User email.
      responses:
        '200':
          description: User data
          schema:
            type: object
            example:
              {
                "id": 1,
                "username": "test",
                "email": "test@test.test",
                "password": "...",
                "language": null,
                "name": null,
                "firstname": null,
                "adress": null,
                "profile_picture": null,
                "age": null,
                "number_phone": null,
                "google_token": null,
                "facebook_token": null
              }
        '400':
          description: Missing parameter email.
        '404':
          description: User not found.
        '500':
          description: System error.
      summary: Get user information by email.
      tags:
          - user
  /user/getbyusername:
    get:
      parameters:
        - in: query
          name: username
          schema:
            type: string
          description: User username.
      responses:
        '200':
          description: User data.
          schema:
            type: object
            example:
              {
                "id": 1,
                "username": "test",
                "email": "test@test.test",
                "password": "...",
                "language": null,
                "name": null,
                "firstname": null,
                "adress": null,
                "profile_picture": null,
                "age": null,
                "number_phone": null,
                "google_token": null,
                "facebook_token": null
              }
        '400':
          description: Missing parameter username.
        '404':
          description: User not found.
        '500':
          description: System error.
      summary: Get user information by username.
      tags:
          - user
  /user/delete:
    get:
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: User email.
      responses:
        '200':
          description: User delete.
        '400':
          description: Missing parameter email.
        '404':
          description: User not found.
        '500':
          description: System error.
      summary: Delete user.
      tags:
          - user
  /oauth/google/urlLogin:
    get:
      responses:
        '200':
          description: Link to google connection.
      summary: Return link to google oauth.
      tags:
        - oauth
  /oauth/google/login:
    get:
      parameters:
        - in: query
          name: code
          schema:
            type: string
          description: The code return by google at the end of the result /oauth/google/urlLogin Paperwork home path.
      responses:
        '200':
          description: Connected with google.
        '500':
          description: Connection with google failed.
      summary: Connect the user with his google account.
      tags:
        - oauth
  /oauth/facebook/url:
    get:
      responses:
        '200':
          description: Link to facebook connection.
      summary: Return link to facebook oauth.
      tags:
        - oauth
  /oauth/facebook/:
    get:
      parameters:
        - in: query
          name: code
          schema:
            type: string
          description: The code return by facebook at the end of the result /oauth/facebook/url Paperwork home path.
      responses:
        '200':
          description: Connected with facebook.
        '500':
          description: Connection with facebook failed.
      summary: Connect the user with his facebook account.
      tags:
        - oauth
  /process/add:
    post:
      parameters:
        - in: body
          name: title
          schema:
            type: string
          description: Title of the new process.
        - in: body
          name: description
          schema:
            type: string
          description: Description of the new process.
        - in: body
          name: source
          schema:
            type: string
          description: Link of the source of the new process (governement website etc), can be NULL.
        - in: body
          name: delay
          schema:
            type: string
            format: date
            pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
            example: "2022-11-24"
          description: Delay of the new process (how long it last), format date "YYYY-MM-DD", it can be NULL.
      responses:
        '200':
          description: Process added.
        '400':
          description: Title or description missing
        '500':
          description: System error.
      summary: Add a process.
      tags:
        - process
  /process/delete:
    get:
      parameters:
        - in: query
          name: title
          schema:
            type: string
            description: Title of the process.
      responses:
        '200':
          description: Process deleted.
        '400':
          description: Missing parameters.
        '500':
          description: System error.
      summary: Delete a process.
      tags:
        - process
  /process/getAll:
    get:
      responses:
        '200':
          description: All existing process.
          schema:
            type: object
            example:
              {
                "response": [
                    {
                        "title": "Vital card",
                        "source": "https://www.service-public.fr/particuliers/vosdroits/F265?lang=en"
                    }
                ]
              }
        '500':
          description: System error.
      summary: Get all process.
      tags:
        - process
  /step/add:
    post:
      parameters:
        - in: body
          name: title
          schema:
            type: string
            description: Title of the step.
        - in: body
          name: type
          schema:
            type: string
            example: appointment
            description: Type of the step (appointment or document).
        - in: body
          name: description
          schema:
            type: string
            description: Description of the step.
        - in: body
          name: question
          schema:
            type: string
            description: Question of the step (the one used for the intelligent quizz).
        - in: body
          name: source
          schema:
            type: string
            description: Source of the step (link of a document for exemple) can be NULL.
        - in: body
          name: is_unique
          schema:
            type: boolean
            description: If the step is mandatory or not in every process it appear.
        - in: body
          name: delay
          schema:
            type: integer
            description: Number of days before the deadline of the step (if there is one) can be NULL.
        - in: body
          name: process_title
          schema:
            type: string
            description: Title of the process of the step.
      responses:
        '200':
          description: Step created.
        '400':
          description: Missing parameters.
        '404':
          description: Process not found.
        '500':
          description: System error.
      summary: Add a step to a process.
      tags:
        - step
  /step/deleteall:
    get:
      parameters:
        - in: query
          name: process_title
          schema:
            type: string
            description: Title of the process where we want to delete all steps.
      responses:
        '200':
          description: Step(s) deleted.
        '400':
          description: Missing parameters.
        '404':
          description: Step(s) not found.
        '500':
          description: System error.
      summary: Delete all steps of a process.
      tags:
        - step
  /processQuestions/get:
    get:
      parameters:
        - in: query
          name: process_title
          schema:
            type: string
            description: Title  of the process the user want to start.
      responses:
        '200':
          description: Process questions.
          schema:
            type: object
            example:
              {
                "questions": [
                  [
                      1,
                      "stepQuestion1"
                  ],
                  [
                      2,
                      "stepQuestion2"
                  ],
                  [
                      3,
                      "stepQuestion3"
                  ]
                ]
              }
        '400':
          description: Missing parameters.
        '404':
          description: Process or Step(s) not found.
        '500':
          description: System error.
      summary: Get process questions.
      tags:
        - question
  /userProcess/add:
    post:
      parameters:
        - in: body
          name: process_title
          schema:
            type: string
            description: Title  of the process the user want to start.
        - in: body
          name: user_email
          schema:
            type: string
            description: Email of the user.
        - in: body
          name: questions
          schema:
            type: array
            example:
              [
                [id, true/false],
                ...
              ]
            description: User responses to the intelligent quizz.
      responses:
        '200':
          description: User process and user steps created.
        '400':
          description: Missing parameters.
        '404':
          description: User not found, process not found or step not found.
        '500':
          description: System error.
      summary: Add a user process.
      tags:
        - userProcess
  /userProcess/delete:
    get:
      parameters:
        - in: query
          name: process_title
          schema:
            type: string
            description: Title of the user process we want to delete.
        - in: query
          name: user_email
          schema:
            type: string
            description: User email of the user process we want to delete.
      responses:
        '200':
          description: User process and user steps deleted.
        '400':
          description: Missing parameters.
        '404':
          description: User or process not found.
        '500':
          description: System error.
      summary: Delete a user process.
      tags:
        - userProcess
  /userProcess/getUserSteps:
    get:
      parameters:
        - in: query
          name: process_title
          schema:
            type: string
            description: Process title of the user process.
        - in: query
          name: user_email
          schema:
            type: string
            description: User email of the user process.
      responses:
        '200':
          description: User steps data.
          schema:
            type: object
            example:
              {
                "message": "User process steps",
                "pourcentage": 33,
                "response":
                [
                  {
                      "id": 1,
                      "step_id": 1,
                      "step_title": "stepTitle1",
                      "step_type": "stepType",
                      "step_description": "stepDescription",
                      "step_source": "stepSource",
                      "is_done": false,
                      "start_date": "2052-12-29T00:00:00.000Z",
                      "end_date": null,
                      "delay": "2052-12-29T00:00:00.000Z",
                      "appoinment": null,
                      "user_process_id": 2
                  },
                  ...
                ]
              }
        '400':
          description: Missing parameters.
        '404':
          description: User or process not found.
        '500':
          description: System error.
      summary: Get user step for a process.
      tags:
        - userProcess
  /userProcess/getUserProcesses:
    get:
      parameters:
        - in: query
          name: user_email
          schema:
            type: string
            description: User email of the user processes.
      responses:
        '200':
          description: User processes.
          schema:
            type: object
            example:
              {
                "message": "User processes",
                "response": [
                    {
                        "id": 1,
                        "is_done": false,
                        "start_process_date": "2022-12-29T00:00:00.000Z",
                        "end_process_date": null,
                        "expire_date": null,
                        "user_id": 1,
                        "process_id": 1,
                        "process_title": "Vital card"
                    },
                    ...
                ]
              }
        '400':
          description: Missing parameters.
        '404':
          description: User not found.
        '500':
          description: System error.
      summary: Get all user processes.
      tags:
        - userProcess
  /calendar/set:
    post:
      parameters:
        - in: body
          name: date
          schema:
            type: string
            example: "YYYY-MM-DD HH:mm:ss"
            description: Date and time of the appointment
        - in: body
          name: user_process_id
          schema:
            type: integer
            description: Id of the user process linked to the new appointment.
        - in: body
          name: step_id
          schema:
            type: integer
            description: Id of the step linked to the new appointment.
      responses:
        '200':
            description: Appointment created.
            schema:
              type: object
              example:
                {
                    "message": "Meeting updated!",
                    "response": {
                        "id": 1,
                        "appoinment": "2022-12-01T12:30:00.000Z"
                    }
                }
        '400':
          description: Missing parameters.
        '404':
          description: Step or user process not found.
        '500':
          description: System error.
      summary: Create a new appointment.
      tags:
        - calendar
  /calendar/getAll:
    get:
      parameters:
        - in: query
          name: email
          schema:
            type: string
            description: Email of the user.
      responses:
        '200':
            description: All the user appointments.
            schema:
              type: object
              example:
                {
                    "message": "User appoinments.",
                    "appoinment": [
                        {
                            "date": "2022-12-01T12:30:00.000Z",
                            "user_process_id": 1,
                            "process_title": "Process title",
                            "step_id": 1,
                            "step_title": "Step title",
                            "step_description": "Description of the step."
                        }
                    ]
                }
        '400':
          description: Missing parameters.
        '404':
          description: User not found.
        '500':
          description: System error.
      summary: Get all the user appointments.
      tags:
        - calendar
  /calendar/delete:
    get:
      parameters:
        - in: query
          name: user_process_id
          schema:
            type: integer
            description: Id of the user process linked to the appointment to delete.
        - in: query
          name: step_id
          schema:
            type: integer
            description: Id of the step linked to the appointment to delete.
      responses:
        '200':
            description: Delete the user appointment.
            schema:
              type: object
              example:
                {
                  "message": "Appoinment deleted.",
                  "res": {
                      "id": 1,
                      "appoinment": null
                  }
                }
        '400':
          description: Missing parameters.
        '404':
          description: User process or step not found.
        '500':
          description: System error.
      summary: Delete an user appointment.
      tags:
        - calendar
  /processProposal/add:
    post:
      parameters:
        - in: body
          name: title
          schema:
            type: string
            description: Title of the proposed process.
        - in: body
          name: description
          schema:
            type: string
            description: Description of the proposed process.
        - in: body
          name: content
          schema:
            type: string
            description: Content of the proposed process.
        - in: body
          name: user_email
          schema:
            type: string
            description: User email.
      responses:
        '200':
          description: process proposal created.
          schema:
            type: object
            example:
              {
                "message": "Proposal added.",
                "response": {
                    "id": 1,
                    "title": "..."
                }
              }
        '400':
          description: Missing parameters.
        '404':
          description: User not found.
        '500':
          description: System error.
      summary: Create a new process proposal.
      tags:
        - processProposal
  /processProposal/getAll:
    get:
      responses:
        '200':
          description: List of all the proposed process.
          schema:
            type: object
            example:
              {
                "message":  "Proposals found.",
                "response": [
                  {
                    "id": 1,
                    "title": "test",
                    "description": "test description",
                    "content": "test content",
                    "date": "2023-01-03T00:00:00.000Z",
                    "user_id": 1,
                    "is_in_process": false
                  }
                ]
              }
        '500':
          description: System error.
      summary: Get all the proposed process.
      tags:
        - processProposal
  /processProposal/delete:
    get:
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            description: Id of the proposed process to delete.
      responses:
        '200':
          description: process proposal deleted.
        '400':
          description: Missing parameters.
        '404':
          description: Process proposal not found.
        '500':
          description: System error.
      summary: Delete a process proposal.
      tags:
        - processProposal